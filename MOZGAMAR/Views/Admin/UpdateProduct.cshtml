@model Domain.Product

@{
    ViewBag.Title = "UpdateProduct";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="container-fluid">

    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/Admin/Dashboard">painel de controle</a>
        </li>
        <li class="breadcrumb-item">
            <a href="~/Admin/Product">Produto</a>
        </li>
        @if (Model.CategoryId == null)
        {
            <li class="breadcrumb-item active">Adicionar  Produto</li>
        }
        else
        {
            <li class="breadcrumb-item active">Editar Produto</li>
        }


    </ol>

    <div class="card mb-3">
        <div class="card-header">
            <i class="fas fa-table"></i>
            Adicionar  Produto
        </div>

        @using (Html.BeginForm("UpdateOrSaveProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)

        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(model => model.Category.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{ List<SelectListItem> data = ViewBag.GetCategoty; }
                    @Html.DropDownListFor(model => model.CategoryId, data, "--- Selecione um categoria ---", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <input type="file" id="fileBase" name="fileBase" style="width:100%" />
                    @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(model => model.IsNew, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBox("IsActive")
                    @Html.ValidationMessageFor(model => model.IsNew, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBox("IsActive")
                    @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @if (Model.ProductId != 0)
        {
            <div class="col-md-7">
                <div class="form-group">
                    @Html.LabelFor(model => model.ISDelete, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBox("ISDelete")
                        @Html.ValidationMessageFor(model => model.ISDelete, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }



        @*<div class="col-md-7">
            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@



        <div class="form-group">
            <div class="col-md-10">
                @Html.ActionLink("Cancelar", "Product", routeValues: null, htmlAttributes: new { @class = "btn btn-danger", @role = "button" })
                <input type="submit" value="Gravar" class="btn btn-success" />

            </div>
        </div>
    </div>
        }

        <div>

        </div>
    </div>


</div>


